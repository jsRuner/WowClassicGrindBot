@page "/FrameConfiguration"

@inject ILogger logger
@inject NavigationManager NavigationManager
@inject AddonConfigurator addonConfigurator
@inject FrameConfigurator frameConfigurator
@inject DataConfig dataConfig
@inject IAddonDataProvider reader

@implements IDisposable

<div class="container">

    @if (saved)
    {
        <h1>Saved! - Please wait until restart! And press <b>Reload</b> when it prompts!</h1>
        <span class="row col-md-12">@playerClass</span>
    }
    @if (FrameConfig.Exists())
    {
        <h1>Frame Configuration file already exists</h1>
    }
    else
    {
        <h1>Frame configuration not found !</h1>
    }

    <div class="card-deck mb-3 text-center">

        @if (FrameConfig.Exists())
        {
            <div class="card mb-4 box-shadow">
                <div class="card-header">
                    <h4 class="my-0 font-weight-normal">Delete</h4>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mt-1 mb-1">
                        <li>Experiencing troubles?</li>
                        <li>Delete current config and do it again!</li>
                    </ul>
                    <button class="btn btn-lg btn-block btn-danger" @onclick="DeleteCurrentConfig">
                        <span>Delete</span>
                    </button>
                </div>
            </div>
        }

        <div class="card mb-4 box-shadow">
            <div class="card-header">
                <h4 class="my-0 font-weight-normal">Auto</h4>
            </div>
            <div class="card-body">
                <ul class="list-unstyled mt-1 mb-1">
                    <li>1-Click</li>
                    <li>Recommended in general</li>
                </ul>
                <button class="btn btn-lg btn-block btn-primary" @onclick="StartAutoConfigure" disabled="@(manual || disabled)">
                    <span>Start</span>
                </button>
            </div>
        </div>

        <div class="card mb-4 box-shadow">
            <div class="card-header">
                <h4 class="my-0 font-weight-normal">Manual</h4>
            </div>
            <div class="card-body">
                <ul class="list-unstyled mt-1 mb-1">
                    <li>Follow few steps</li>
                    <li>Recommended for troubleshooting</li>
                </ul>
                <button type="button" class="btn btn-lg btn-block @manualButtonStyle" @onclick="ToggleManualConfig" disabled="@disabled">
                    @manualButtonText
                </button>
            </div>
        </div>
    </div>

    @if (frameConfigurator.AddonNotVisible)
    {
        <ul class="list-group">
            <li class="list-group-item">
                I saw @frameConfigurator.DataFrames.Length data frames. But its keep changing! The addon is not visible.
            </li>
            <li class="list-group-item">
                <p class="text-danger">Restart the game</p>
            </li>
            <li class="list-group-item">
                <p class="text-danger">Enable the addon</p>
            </li>
            <li class="list-group-item">
                <p class="text-danger">Make sure nothing obstruct</p>
            </li>
        </ul>
        <br>
    }

    <h5 class="row col-md-12">Your screen:</h5>

    <div class="row col-md-12">
        @if (@frameConfigurator.DataFrames.Length != frameConfigurator.DataFrameMeta.frames)
        {
            <img style="border:1px solid red; margin: 5px" src="data:image/png;base64, @frameConfigurator.ImageBase64" alt="Red dot" />
        }
        else
        {
            <img style="border:1px solid green; margin: 5px" src="data:image/png;base64, @frameConfigurator.ImageBase64" alt="Red dot" />
        }
    </div>

    <span class="row col-md-12">@playerClass</span>

    @if (manual)
    {
        <br>
        <ul class="list-group">
            <li class="list-group-item">
                Step 1: Please ensure the addon <span class="px-2"><b>@addonConfig.Title</b></span> found in the addon folders is running. You should see the multi-coloured pixels at the top left of the screen.
                @if (frameConfigurator.DataFrames.Length != frameConfigurator.DataFrameMeta.frames)
                {
                    <br>
                    <img src="_content/Frontend/Addon_Normal.png" />
                }
            </li>
            <li class="list-group-item">
                Step 2: Now we are going to put the addon into configuration mode, this will change the addon colours displayed. In the wow chat window: type <span class="ml-1"><b>&#47;@addonConfig.Command</b></span>
                @if (frameConfigurator.DataFrames.Length != frameConfigurator.DataFrameMeta.frames)
                {
                    <br>
                    <img src="_content/Frontend/Addon_Config.png" />
                }
            </li>
            <li class="list-group-item">
                Step 3: Should see @frameConfigurator.DataFrameMeta.frames frames - Now i see @frameConfigurator.DataFrames.Length data frames.
            </li>
            @if (frameConfigurator.DataFrameMeta.frames != 0 && frameConfigurator.DataFrames.Length == frameConfigurator.DataFrameMeta.frames)
            {
                <li class="list-group-item">
                    <span>Step 4: Now return to normal mode, In the wow chat window: type <span class="ml-1"><b>&#47;@addonConfig.Command</b></span></span>
                </li>
            }
            @if (!string.IsNullOrEmpty(playerClass) && !playerClass.Contains("unable to read player class", StringComparison.OrdinalIgnoreCase) && !playerClass.Contains("none", StringComparison.OrdinalIgnoreCase))
            {
                <li class="list-group-item">
                    Step 5: This is perfect, just click the Save button.
                    <br>
                    <button class="btn btn-sm btn-success" @onclick="FinishManualConfigure">
                        <span>Save</span>
                    </button>
                </li>
            }
        </ul>
    }
    <hr />
    <LogComponent />
</div>
@code {

    private AddonConfig addonConfig = null!;

    private bool disabled = true;
    private bool saved = false;
    private bool manual { get; set; } = false;
    private string manualButtonText { get; set; } = "Start";
    private string manualButtonStyle => manualButtonText == "Start" ? "btn-primary" : "btn-danger";
    private string playerClass = string.Empty;

    protected override void OnInitialized()
    {
        addonConfig = addonConfigurator.Config;
        frameConfigurator.OnUpdate += OnUpdate;

        if (reader is AddonDataProviderGDIConfig)
            disabled = false;
    }

    public void Dispose()
    {
        frameConfigurator.OnUpdate -= OnUpdate;
        frameConfigurator.Dispose();
    }


    private void OnUpdate()
    {
        if (frameConfigurator.TryResolveRaceAndClass(out UnitRace race, out UnitClass @class, out ClientVersion version))
        {
            playerClass = $"{version.ToStringF()} {race.ToStringF()} {@class.ToStringF()}";
        }
        else
        {
            playerClass = "unable to read player class";
        }

        saved = frameConfigurator.Saved;

        base.InvokeAsync(StateHasChanged);
    }

    public void ToggleManualConfig()
    {
        manual = !manual;
        if (manual)
        {
            manualButtonText = "Stop";
        }
        else
        {
            playerClass = string.Empty;
            manualButtonText = "Start";
        }

        frameConfigurator.ToggleManualConfig();
    }

    public void FinishManualConfigure()
    {
        if (frameConfigurator.FinishConfig())
            NavigationManager.NavigateTo("/RestartServer");
    }

    public async void StartAutoConfigure()
    {
        await Task.Delay(1);
        bool success = frameConfigurator.StartAutoConfig();
        OnUpdate();
        if (success)
            NavigationManager.NavigateTo("/RestartServer");
    }

    public void DeleteCurrentConfig()
    {
        FrameConfigurator.DeleteConfig();
        NavigationManager.NavigateTo("/RestartServer");
    }
}