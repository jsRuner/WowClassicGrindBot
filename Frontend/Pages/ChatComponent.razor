@using System.Collections.Specialized

@implements IDisposable

@inject ChatReader reader

<style>
    .log {
        font-family: Consolas, monaco, monospace;
        font-size: small;
        padding: 0 0 5px 0 !important;
        padding-right: 5px !important;
    }
</style>

<div class="col-sm" style="@(MaxHeight > 0 ? $"overflow: auto; max-height: {MaxHeight}px;" : string.Empty)">
    <table class="table table-borderless table-dark" cellspacing="20">
        @foreach (var cme in reader.Messages.Reverse())
        {
            <tr style="color: @(typeColor[(int)cme.Type])">
                <td width="65px" class="log">@cme.Time.ToString("HH:mm:ss")</td>
                <td width="80px" class="log">@cme.Author:</td>
                <td class="log">@cme.Message</td>
            </tr>
        }
    </table>
</div>

@code {
    [Parameter]
    public int MaxHeight { get; set; } = 400;

    private static readonly string[] typeColor = {
        "pink",     // ChatMessageType.Whisper
        "white",    // ChatMessageType.Say
        "red",      // ChatMessageType.Yell
        "orange",   // ChatMessageType.Emote
        "cyan",    // ChatMessageType.Party
    };

    protected override void OnInitialized()
    {
        reader.Messages.CollectionChanged += Changed;
    }

    public void Dispose()
    {
        reader.Messages.CollectionChanged -= Changed;
    }

    private void Changed(object? s, NotifyCollectionChangedEventArgs e)
    {
        base.InvokeAsync(StateHasChanged);
    }
}